{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Icon.js","components/Counter.js","components/Player.js","components/AddPlayerForm.js","App.js","index.js"],"names":["Stats","players","totalPlayers","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","Icon","isHighScore","viewBox","d","transform","width","height","Counter","index","changeScore","Player","name","id","removePlayer","AddPlayerForm","value","handleValueChange","e","target","handleSubmit","preventDefault","alert","props","addPlayer","onSubmit","type","onChange","placeholder","App","prevPlayerId","handleScoreChange","delta","handleRemovePlayer","filter","getHighScore","scores","map","p","highScore","max","handleAddPlayer","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.170ee9ad.chunk.js","sourcesContent":["import React from 'react';\n\nconst Stats = ({ players }) => {\n\n  const totalPlayers = players.length;\n\n  const totalPoints = players.reduce((total, player) => {\n    return total + player.score;\n  }, 0);\n\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <td>Players:</td>\n          <td>{totalPlayers}</td>\n        </tr>\n        <tr>\n          <td>Total Points:</td>\n          <td>{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default Stats;\n\n","import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState(prevState => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n      }));\n    }\n  }\n\n  handleStopwatch = () => {\n    this.setState(prevState => ({\n      isRunning: !this.state.isRunning\n    }))\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() })\n    }\n  }\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  }\n\n  render() {\n\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{seconds}</span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? 'Stop' : 'Start'}\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n","import React from 'react';\nimport Stats from './Stats';\nimport Stopwatch from './Stopwatch';\n\nconst Header = ({ title, players }) => {\n  return (\n    <header>\n      <Stats players={players} />\n      <h1>{title}</h1>\n      <Stopwatch />\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react'\n\nconst Icon = ({ isHighScore }) => {\n  return (\n    <svg viewBox=\"0 0 44 35\" className={isHighScore ? 'is-high-score' : null}>\n      <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\" />\n      <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\" />\n    </svg>\n  )\n}\n\nexport default Icon;\n","import React from 'react';\n\nconst Counter = ({ index, score, changeScore }) => {\n  return (\n    <div className=\"counter\">\n      <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\n      <span className=\"counter-score\">{score}</span>\n      <button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\n    </div>\n  );\n}\n\nexport default Counter;","import React from 'react';\nimport Icon from './Icon';\nimport Counter from './Counter';\n\nconst Player = ({ name, score, id, index, changeScore, removePlayer, isHighScore }) => {\n  return (\n    <div className=\"player\">\n      <span className=\"player-name\">\n        <button className=\"remove-player\" onClick={() => removePlayer(id)}>X</button>\n        <Icon isHighScore={isHighScore} />\n        {name}\n      </span>\n      <Counter score={score} index={index} changeScore={changeScore} />\n    </div>\n  )\n}\n\nexport default Player;\n","import React, { Component } from 'react';\n\nclass AddPlayerForm extends Component {\n\n  state = {\n    value: ''\n  }\n\n  handleValueChange = (e) => {\n    this.setState({ value: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.value.length === 0) {\n      alert('Input required')\n    } else {\n      this.props.addPlayer(this.state.value);\n      this.setState({ value: '' })\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" value={this.state.value} onChange={this.handleValueChange} placeholder=\"Enter player name\" />\n        <input type=\"submit\" value=\"Add Player\" />\n      </form>\n    )\n  }\n}\n\nexport default AddPlayerForm;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Player from './components/Player';\nimport AddPlayerForm from './components/AddPlayerForm';\n\nclass App extends Component {\n\n  state = {\n    players: [\n      {\n        name: \"Harry\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Michael\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Luke\",\n        score: 0,\n        id: 3\n      }\n    ]\n  }\n\n  prevPlayerId = 3;\n\n  handleScoreChange = (index, delta) => {\n    this.setState(prevState => {\n      return {\n        score: prevState.players[index].score += delta\n      }\n    })\n  }\n\n  handleRemovePlayer = (id) => {\n    this.setState(prevState => {\n      return {\n        players: prevState.players.filter(player => player.id !== id)\n      }\n    })\n  }\n\n  getHighScore = () => {\n    const scores = this.state.players.map(p => p.score);\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    } else {\n      return null;\n    }\n  }\n\n  handleAddPlayer = (name) => {\n    this.setState(prevState => {\n      return {\n        players: [\n          ...prevState.players,\n          {\n            name: name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }\n        ]\n      }\n    })\n  }\n\n  render() {\n\n    const highScore = this.getHighScore();\n\n    return (\n      <div className=\"scoreboard\">\n        <Header title=\"Scoreboard\" players={this.state.players} />\n        {this.state.players.map((player, index) =>\n          <Player\n            name={player.name}\n            score={player.score}\n            id={player.id}\n            key={player.id.toString()}\n            index={index}\n            changeScore={this.handleScoreChange}\n            removePlayer={this.handleRemovePlayer}\n            isHighScore={highScore === player.score}\n          />\n        )}\n        <AddPlayerForm addPlayer={this.handleAddPlayer} />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}